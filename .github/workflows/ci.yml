name: CI

on:
  pull_request:
    branches: ["*"]
  push:
    branches: ["main"]

# You can leverage Vercel Remote Caching with Turbo to speed up your builds
# @link https://turborepo.org/docs/core-concepts/remote-caching#remote-caching-on-vercel-builds
env:
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  TURBO_TEAM: ${{ secrets.TURBO_TEAM }}
  NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: ${{ secrets.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY }}
  EXPO_OWNER: ${{ secrets.EXPO_OWNER }}
  EXPO_PROJECT_ID: ${{ secrets.EXPO_PROJECT_ID }}


concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v2.4.0

      - name: Setup Node 18
        uses: actions/setup-node@v4
        with:
          node-version: 18.18.2
          cache: 'pnpm'
          cache-dependency-path: 'pnpm-lock.yaml'

      - name: Install deps
        run: pnpm install

      - name: Lint
        run: pnpm turbo lint

      - name: Check workspaces
        run: pnpm manypkg check

      - name: Check Expo dependencies
        run: (cd apps/expo && pnpm lint:expo)
  format:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v2.4.0

      - name: Setup Node 18
        uses: actions/setup-node@v4
        with:
          node-version: 18.18.2
          cache: 'pnpm'
          cache-dependency-path: 'pnpm-lock.yaml'

      - name: Install deps
        run: pnpm install

      - name: Check formatting
        run: pnpm turbo format
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v2.4.0

      - name: Setup Node 18
        uses: actions/setup-node@v4
        with:
          node-version: 18.18.2
          cache: 'pnpm'
          cache-dependency-path: 'pnpm-lock.yaml'

      - name: Install deps
        run: pnpm install

      - name: Build
        run: pnpm turbo typecheck build
  android:
    runs-on: ubuntu-latest
    needs: [lint, format, build]

    steps:
    - name: Setup repo
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Check for changes to Expo app
      id: check-expo
      run: |
        if [ "${{ github.ref }}" = "refs/heads/main" ]; then
          if git diff --quiet HEAD^ HEAD -- apps/expo; then
            echo "Expo project not modified"
            echo "skip_job=true" >> $GITHUB_OUTPUT
          else
            echo "Expo project modified"
            echo "skip_job=false" >> $GITHUB_OUTPUT
          fi
        else
          if git diff --quiet origin/main HEAD -- apps/expo; then
            echo "Expo project not modified"
            echo "skip_job=true" >> $GITHUB_OUTPUT
          else
            echo "Expo project modified"
            echo "skip_job=false" >> $GITHUB_OUTPUT
          fi
        fi

    - name: Setup pnpm
      uses: pnpm/action-setup@v2.4.0
      if: ${{ steps.check-expo.outputs.skip_job == 'false' }}

    - name: Setup Node
      uses: actions/setup-node@v4
      if: ${{ steps.check-expo.outputs.skip_job == 'false' }}
      with:
        node-version: 18.18.2
        cache: 'pnpm'
        cache-dependency-path: 'pnpm-lock.yaml'

    - name: Setup Expo and EAS
      uses: expo/expo-github-action@v8
      if: ${{ steps.check-expo.outputs.skip_job == 'false' }}
      with:
        token: ${{ secrets.EXPO_TOKEN }}
        expo-version: latest
        eas-version: latest
        packager: pnpm

    - name: Install deps
      if: ${{ steps.check-expo.outputs.skip_job == 'false' }}
      run: pnpm i

    - name: Expo prebuild
      if: ${{ steps.check-expo.outputs.skip_job == 'false' }}
      run: cd apps/expo && pnpm expo prebuild

    - name: Gradle Cache
      uses: burrunan/gradle-cache-action@v1
      if: ${{ steps.check-expo.outputs.skip_job == 'false' }}
      with:
        build-root-directory: apps/expo/android
        gradle-distribution-sha-256-sum-warning: false
        read-only: ${{ github.ref != 'refs/heads/main' }}

    - name: Build app
      if: ${{ steps.check-expo.outputs.skip_job == 'false' }}
      run: |
        cd apps/expo && eas build --local \
          --non-interactive \
          --output=./app-build \
          --platform=android \
          --profile=development

  ios:
    runs-on: macos-latest
    needs: [lint, format, build]

    steps:
    - name: Setup repo
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Check for changes to Expo app
      id: check-expo
      run: |
        if [ "${{ github.ref }}" = "refs/heads/main" ]; then
          if git diff --quiet HEAD^ HEAD -- apps/expo; then
            echo "Expo project not modified"
            echo "skip_job=true" >> $GITHUB_OUTPUT
          else
            echo "Expo project modified"
            echo "skip_job=false" >> $GITHUB_OUTPUT
          fi
        else
          if git diff --quiet origin/main HEAD -- apps/expo; then
            echo "Expo project not modified"
            echo "skip_job=true" >> $GITHUB_OUTPUT
          else
            echo "Expo project modified"
            echo "skip_job=false" >> $GITHUB_OUTPUT
          fi
        fi

    - name: Buildcache setup 
      uses: mikehardy/buildcache-action@v2
      env:
        BUILDCACHE_DEBUG: 2

    - name: Setup pnpm
      uses: pnpm/action-setup@v2.4.0
      if: ${{ steps.check-expo.outputs.skip_job == 'false' }}

    - name: Setup Node
      uses: actions/setup-node@v4
      if: ${{ steps.check-expo.outputs.skip_job == 'false' }}
      with:
        node-version: 18.18.2
        cache: 'pnpm'
        cache-dependency-path: 'pnpm-lock.yaml'

    - name: Setup Expo and EAS
      uses: expo/expo-github-action@v8
      if: ${{ steps.check-expo.outputs.skip_job == 'false' }}
      with:
        token: ${{ secrets.EXPO_TOKEN }}
        expo-version: latest
        eas-version: latest
        packager: pnpm

    - name: Install deps
      if: ${{ steps.check-expo.outputs.skip_job == 'false' }}
      run: pnpm i

    - name: Build app
      if: ${{ steps.check-expo.outputs.skip_job == 'false' }}
      run: |
        cd apps/expo && eas build --local \
          --non-interactive \
          --output=./app-build \
          --platform=ios \
          --profile=preview
